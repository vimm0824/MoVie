<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.MoVie.review.dao.ReviewDAO">
 	<insert id="insertReviewByUserId" parameterType="map">
 		INSERT INTO `review`
 		(
 			`userId`
 			, `movieCd`
 			, `point`
 			, `review`
 			, `createdAt`
 			, `updatedAt`
 		)
 		VALUES
 		(
 			#{userId}
 			, #{movieCd}
 			, #{point}
 			, #{review}
 			, NOW()
 			, NOW()
 		)
 	</insert>
 	
 	<select id="selectReviewByUserIdMovieCd" resultType="int">
 		SELECT
 			COUNT(*)
 		FROM
 			`review`
 		WHERE
 			`userId` = #{userId}
 			AND
 			`movieCd` = #{movieCd} 
 	</select>
 	
 	<select id="selectReviewListByMovieCd" resultType="com.MoVie.review.model.Review">
 		SELECT
 			`id`
 			, `userId`
 			, `movieCd`
 			, `point`
 			, `review`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`review`
 		WHERE
 			`movieCd` = #{movieCd}
 		ORDER BY `id` DESC
 	</select>
 	
 	<select id="selectReviewListByUserIdOrderByPoint" resultType="com.MoVie.review.model.Review">
 		SELECT
 			`id`
 			, `userId`
 			, `movieCd`
 			, `point`
 			, `review`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`review`
 		WHERE
 			`userId` = #{userId}
 		ORDER BY `point` DESC
 	</select>
 	
 	<select id="selectReviewListByUserIdPoint" resultType="com.MoVie.review.model.Review">
 		SELECT
 			`id`
 			, `userId`
 			, `movieCd`
 			, `point`
 			, `review`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`review`
 		WHERE
 			`userId` = #{userId}
 			AND 
 			`point` = #{point}
 		ORDER BY `id` DESC
 		LIMIT 5
 	</select>
 	
 	<select id="selectReviewListByUserId" resultType="com.MoVie.review.model.Review">
 		SELECT
 			`id`
 			, `userId`
 			, `movieCd`
 			, `point`
 			, `review`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`review`
 		WHERE
 			`userId` = #{userId}
 		ORDER BY `id` DESC
 	</select>
 	
 	<select id="selectReviewCountByMovieCdPoint" resultType="int">
 		SELECT
 			COUNT(*)
 		FROM
 			`review`
 		WHERE
 			`movieCd` = #{movieCd}
 			AND
 			`point` = #{point}
 	</select>
 	
 	<delete id="deleteReviewByUserIdByMovieCd" parameterType="map">
 		DELETE
 		FROM
 			`review`
 		WHERE
 			`userId` = #{userId}
 			AND
 			`movieCd` = #{movieCd}
 	</delete>
 	
 	<update id="updateReviewByUserIdMovieCd" parameterType="map">
 		UPDATE `review`
 		SET
 			`point` = #{point}
 			, `review` = #{review}
 			, `updatedAt` = NOW()
 		WHERE
 			`userId` = #{userId}
 			AND
 			`movieCd` = #{movieCd}
 	</update>
 </mapper>